package com.entity;

// Generated 2020-7-22 10:29:49 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ActRuExecution generated by hbm2java
 */
@Entity
@Table(name = "ACT_RU_EXECUTION", catalog = "sjtu_train")
public class ActRuExecution implements java.io.Serializable {

	private String id;
	private ActRuExecution actRuExecutionByParentId;
	private ActReProcdef actReProcdef;
	private ActRuExecution actRuExecutionBySuperExec;
	private ActRuExecution actRuExecutionByProcInstId;
	private Integer rev;
	private String businessKey;
	private String rootProcInstId;
	private String actId;
	private Byte isActive;
	private Byte isConcurrent;
	private Byte isScope;
	private Byte isEventScope;
	private Byte isMiRoot;
	private Integer suspensionState;
	private Integer cachedEntState;
	private String tenantId;
	private String name;
	private Date startTime;
	private String startUserId;
	private Date lockTime;
	private Byte isCountEnabled;
	private Integer evtSubscrCount;
	private Integer taskCount;
	private Integer jobCount;
	private Integer timerJobCount;
	private Integer suspJobCount;
	private Integer deadletterJobCount;
	private Integer varCount;
	private Integer idLinkCount;
	private Set<ActRuJob> actRuJobsForExecutionId = new HashSet<ActRuJob>(0);
	private Set<ActRuTask> actRuTasksForExecutionId = new HashSet<ActRuTask>(0);
	private Set<ActRuExecution> actRuExecutionsForProcInstId = new HashSet<ActRuExecution>(
			0);
	private Set<ActRuJob> actRuJobsForProcessInstanceId = new HashSet<ActRuJob>(
			0);
	private Set<ActRuDeadletterJob> actRuDeadletterJobsForExecutionId = new HashSet<ActRuDeadletterJob>(
			0);
	private Set<ActRuEventSubscr> actRuEventSubscrs = new HashSet<ActRuEventSubscr>(
			0);
	private Set<ActRuTimerJob> actRuTimerJobsForExecutionId = new HashSet<ActRuTimerJob>(
			0);
	private Set<ActRuVariable> actRuVariablesForExecutionId = new HashSet<ActRuVariable>(
			0);
	private Set<ActRuIntegration> actRuIntegrationsForProcessInstanceId = new HashSet<ActRuIntegration>(
			0);
	private Set<ActRuExecution> actRuExecutionsForSuperExec = new HashSet<ActRuExecution>(
			0);
	private Set<ActRuExecution> actRuExecutionsForParentId = new HashSet<ActRuExecution>(
			0);
	private Set<ActRuTimerJob> actRuTimerJobsForProcessInstanceId = new HashSet<ActRuTimerJob>(
			0);
	private Set<ActRuVariable> actRuVariablesForProcInstId = new HashSet<ActRuVariable>(
			0);
	private Set<ActRuIntegration> actRuIntegrationsForExecutionId = new HashSet<ActRuIntegration>(
			0);
	private Set<ActRuDeadletterJob> actRuDeadletterJobsForProcessInstanceId = new HashSet<ActRuDeadletterJob>(
			0);
	private Set<ActRuIdentitylink> actRuIdentitylinks = new HashSet<ActRuIdentitylink>(
			0);
	private Set<ActRuSuspendedJob> actRuSuspendedJobsForProcessInstanceId = new HashSet<ActRuSuspendedJob>(
			0);
	private Set<ActRuTask> actRuTasksForProcInstId = new HashSet<ActRuTask>(0);
	private Set<ActRuSuspendedJob> actRuSuspendedJobsForExecutionId = new HashSet<ActRuSuspendedJob>(
			0);

	public ActRuExecution() {
	}

	public ActRuExecution(String id) {
		this.id = id;
	}

	public ActRuExecution(String id, ActRuExecution actRuExecutionByParentId,
			ActReProcdef actReProcdef,
			ActRuExecution actRuExecutionBySuperExec,
			ActRuExecution actRuExecutionByProcInstId, Integer rev,
			String businessKey, String rootProcInstId, String actId,
			Byte isActive, Byte isConcurrent, Byte isScope, Byte isEventScope,
			Byte isMiRoot, Integer suspensionState, Integer cachedEntState,
			String tenantId, String name, Date startTime, String startUserId,
			Date lockTime, Byte isCountEnabled, Integer evtSubscrCount,
			Integer taskCount, Integer jobCount, Integer timerJobCount,
			Integer suspJobCount, Integer deadletterJobCount, Integer varCount,
			Integer idLinkCount, Set<ActRuJob> actRuJobsForExecutionId,
			Set<ActRuTask> actRuTasksForExecutionId,
			Set<ActRuExecution> actRuExecutionsForProcInstId,
			Set<ActRuJob> actRuJobsForProcessInstanceId,
			Set<ActRuDeadletterJob> actRuDeadletterJobsForExecutionId,
			Set<ActRuEventSubscr> actRuEventSubscrs,
			Set<ActRuTimerJob> actRuTimerJobsForExecutionId,
			Set<ActRuVariable> actRuVariablesForExecutionId,
			Set<ActRuIntegration> actRuIntegrationsForProcessInstanceId,
			Set<ActRuExecution> actRuExecutionsForSuperExec,
			Set<ActRuExecution> actRuExecutionsForParentId,
			Set<ActRuTimerJob> actRuTimerJobsForProcessInstanceId,
			Set<ActRuVariable> actRuVariablesForProcInstId,
			Set<ActRuIntegration> actRuIntegrationsForExecutionId,
			Set<ActRuDeadletterJob> actRuDeadletterJobsForProcessInstanceId,
			Set<ActRuIdentitylink> actRuIdentitylinks,
			Set<ActRuSuspendedJob> actRuSuspendedJobsForProcessInstanceId,
			Set<ActRuTask> actRuTasksForProcInstId,
			Set<ActRuSuspendedJob> actRuSuspendedJobsForExecutionId) {
		this.id = id;
		this.actRuExecutionByParentId = actRuExecutionByParentId;
		this.actReProcdef = actReProcdef;
		this.actRuExecutionBySuperExec = actRuExecutionBySuperExec;
		this.actRuExecutionByProcInstId = actRuExecutionByProcInstId;
		this.rev = rev;
		this.businessKey = businessKey;
		this.rootProcInstId = rootProcInstId;
		this.actId = actId;
		this.isActive = isActive;
		this.isConcurrent = isConcurrent;
		this.isScope = isScope;
		this.isEventScope = isEventScope;
		this.isMiRoot = isMiRoot;
		this.suspensionState = suspensionState;
		this.cachedEntState = cachedEntState;
		this.tenantId = tenantId;
		this.name = name;
		this.startTime = startTime;
		this.startUserId = startUserId;
		this.lockTime = lockTime;
		this.isCountEnabled = isCountEnabled;
		this.evtSubscrCount = evtSubscrCount;
		this.taskCount = taskCount;
		this.jobCount = jobCount;
		this.timerJobCount = timerJobCount;
		this.suspJobCount = suspJobCount;
		this.deadletterJobCount = deadletterJobCount;
		this.varCount = varCount;
		this.idLinkCount = idLinkCount;
		this.actRuJobsForExecutionId = actRuJobsForExecutionId;
		this.actRuTasksForExecutionId = actRuTasksForExecutionId;
		this.actRuExecutionsForProcInstId = actRuExecutionsForProcInstId;
		this.actRuJobsForProcessInstanceId = actRuJobsForProcessInstanceId;
		this.actRuDeadletterJobsForExecutionId = actRuDeadletterJobsForExecutionId;
		this.actRuEventSubscrs = actRuEventSubscrs;
		this.actRuTimerJobsForExecutionId = actRuTimerJobsForExecutionId;
		this.actRuVariablesForExecutionId = actRuVariablesForExecutionId;
		this.actRuIntegrationsForProcessInstanceId = actRuIntegrationsForProcessInstanceId;
		this.actRuExecutionsForSuperExec = actRuExecutionsForSuperExec;
		this.actRuExecutionsForParentId = actRuExecutionsForParentId;
		this.actRuTimerJobsForProcessInstanceId = actRuTimerJobsForProcessInstanceId;
		this.actRuVariablesForProcInstId = actRuVariablesForProcInstId;
		this.actRuIntegrationsForExecutionId = actRuIntegrationsForExecutionId;
		this.actRuDeadletterJobsForProcessInstanceId = actRuDeadletterJobsForProcessInstanceId;
		this.actRuIdentitylinks = actRuIdentitylinks;
		this.actRuSuspendedJobsForProcessInstanceId = actRuSuspendedJobsForProcessInstanceId;
		this.actRuTasksForProcInstId = actRuTasksForProcInstId;
		this.actRuSuspendedJobsForExecutionId = actRuSuspendedJobsForExecutionId;
	}

	@Id
	@Column(name = "ID_", unique = true, nullable = false, length = 64)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENT_ID_")
	public ActRuExecution getActRuExecutionByParentId() {
		return this.actRuExecutionByParentId;
	}

	public void setActRuExecutionByParentId(
			ActRuExecution actRuExecutionByParentId) {
		this.actRuExecutionByParentId = actRuExecutionByParentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROC_DEF_ID_")
	public ActReProcdef getActReProcdef() {
		return this.actReProcdef;
	}

	public void setActReProcdef(ActReProcdef actReProcdef) {
		this.actReProcdef = actReProcdef;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUPER_EXEC_")
	public ActRuExecution getActRuExecutionBySuperExec() {
		return this.actRuExecutionBySuperExec;
	}

	public void setActRuExecutionBySuperExec(
			ActRuExecution actRuExecutionBySuperExec) {
		this.actRuExecutionBySuperExec = actRuExecutionBySuperExec;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROC_INST_ID_")
	public ActRuExecution getActRuExecutionByProcInstId() {
		return this.actRuExecutionByProcInstId;
	}

	public void setActRuExecutionByProcInstId(
			ActRuExecution actRuExecutionByProcInstId) {
		this.actRuExecutionByProcInstId = actRuExecutionByProcInstId;
	}

	@Column(name = "REV_")
	public Integer getRev() {
		return this.rev;
	}

	public void setRev(Integer rev) {
		this.rev = rev;
	}

	@Column(name = "BUSINESS_KEY_")
	public String getBusinessKey() {
		return this.businessKey;
	}

	public void setBusinessKey(String businessKey) {
		this.businessKey = businessKey;
	}

	@Column(name = "ROOT_PROC_INST_ID_", length = 64)
	public String getRootProcInstId() {
		return this.rootProcInstId;
	}

	public void setRootProcInstId(String rootProcInstId) {
		this.rootProcInstId = rootProcInstId;
	}

	@Column(name = "ACT_ID_")
	public String getActId() {
		return this.actId;
	}

	public void setActId(String actId) {
		this.actId = actId;
	}

	@Column(name = "IS_ACTIVE_")
	public Byte getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Byte isActive) {
		this.isActive = isActive;
	}

	@Column(name = "IS_CONCURRENT_")
	public Byte getIsConcurrent() {
		return this.isConcurrent;
	}

	public void setIsConcurrent(Byte isConcurrent) {
		this.isConcurrent = isConcurrent;
	}

	@Column(name = "IS_SCOPE_")
	public Byte getIsScope() {
		return this.isScope;
	}

	public void setIsScope(Byte isScope) {
		this.isScope = isScope;
	}

	@Column(name = "IS_EVENT_SCOPE_")
	public Byte getIsEventScope() {
		return this.isEventScope;
	}

	public void setIsEventScope(Byte isEventScope) {
		this.isEventScope = isEventScope;
	}

	@Column(name = "IS_MI_ROOT_")
	public Byte getIsMiRoot() {
		return this.isMiRoot;
	}

	public void setIsMiRoot(Byte isMiRoot) {
		this.isMiRoot = isMiRoot;
	}

	@Column(name = "SUSPENSION_STATE_")
	public Integer getSuspensionState() {
		return this.suspensionState;
	}

	public void setSuspensionState(Integer suspensionState) {
		this.suspensionState = suspensionState;
	}

	@Column(name = "CACHED_ENT_STATE_")
	public Integer getCachedEntState() {
		return this.cachedEntState;
	}

	public void setCachedEntState(Integer cachedEntState) {
		this.cachedEntState = cachedEntState;
	}

	@Column(name = "TENANT_ID_")
	public String getTenantId() {
		return this.tenantId;
	}

	public void setTenantId(String tenantId) {
		this.tenantId = tenantId;
	}

	@Column(name = "NAME_")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "START_TIME_", length = 19)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Column(name = "START_USER_ID_")
	public String getStartUserId() {
		return this.startUserId;
	}

	public void setStartUserId(String startUserId) {
		this.startUserId = startUserId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LOCK_TIME_", length = 19)
	public Date getLockTime() {
		return this.lockTime;
	}

	public void setLockTime(Date lockTime) {
		this.lockTime = lockTime;
	}

	@Column(name = "IS_COUNT_ENABLED_")
	public Byte getIsCountEnabled() {
		return this.isCountEnabled;
	}

	public void setIsCountEnabled(Byte isCountEnabled) {
		this.isCountEnabled = isCountEnabled;
	}

	@Column(name = "EVT_SUBSCR_COUNT_")
	public Integer getEvtSubscrCount() {
		return this.evtSubscrCount;
	}

	public void setEvtSubscrCount(Integer evtSubscrCount) {
		this.evtSubscrCount = evtSubscrCount;
	}

	@Column(name = "TASK_COUNT_")
	public Integer getTaskCount() {
		return this.taskCount;
	}

	public void setTaskCount(Integer taskCount) {
		this.taskCount = taskCount;
	}

	@Column(name = "JOB_COUNT_")
	public Integer getJobCount() {
		return this.jobCount;
	}

	public void setJobCount(Integer jobCount) {
		this.jobCount = jobCount;
	}

	@Column(name = "TIMER_JOB_COUNT_")
	public Integer getTimerJobCount() {
		return this.timerJobCount;
	}

	public void setTimerJobCount(Integer timerJobCount) {
		this.timerJobCount = timerJobCount;
	}

	@Column(name = "SUSP_JOB_COUNT_")
	public Integer getSuspJobCount() {
		return this.suspJobCount;
	}

	public void setSuspJobCount(Integer suspJobCount) {
		this.suspJobCount = suspJobCount;
	}

	@Column(name = "DEADLETTER_JOB_COUNT_")
	public Integer getDeadletterJobCount() {
		return this.deadletterJobCount;
	}

	public void setDeadletterJobCount(Integer deadletterJobCount) {
		this.deadletterJobCount = deadletterJobCount;
	}

	@Column(name = "VAR_COUNT_")
	public Integer getVarCount() {
		return this.varCount;
	}

	public void setVarCount(Integer varCount) {
		this.varCount = varCount;
	}

	@Column(name = "ID_LINK_COUNT_")
	public Integer getIdLinkCount() {
		return this.idLinkCount;
	}

	public void setIdLinkCount(Integer idLinkCount) {
		this.idLinkCount = idLinkCount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByExecutionId")
	public Set<ActRuJob> getActRuJobsForExecutionId() {
		return this.actRuJobsForExecutionId;
	}

	public void setActRuJobsForExecutionId(Set<ActRuJob> actRuJobsForExecutionId) {
		this.actRuJobsForExecutionId = actRuJobsForExecutionId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByExecutionId")
	public Set<ActRuTask> getActRuTasksForExecutionId() {
		return this.actRuTasksForExecutionId;
	}

	public void setActRuTasksForExecutionId(
			Set<ActRuTask> actRuTasksForExecutionId) {
		this.actRuTasksForExecutionId = actRuTasksForExecutionId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByProcInstId")
	public Set<ActRuExecution> getActRuExecutionsForProcInstId() {
		return this.actRuExecutionsForProcInstId;
	}

	public void setActRuExecutionsForProcInstId(
			Set<ActRuExecution> actRuExecutionsForProcInstId) {
		this.actRuExecutionsForProcInstId = actRuExecutionsForProcInstId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByProcessInstanceId")
	public Set<ActRuJob> getActRuJobsForProcessInstanceId() {
		return this.actRuJobsForProcessInstanceId;
	}

	public void setActRuJobsForProcessInstanceId(
			Set<ActRuJob> actRuJobsForProcessInstanceId) {
		this.actRuJobsForProcessInstanceId = actRuJobsForProcessInstanceId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByExecutionId")
	public Set<ActRuDeadletterJob> getActRuDeadletterJobsForExecutionId() {
		return this.actRuDeadletterJobsForExecutionId;
	}

	public void setActRuDeadletterJobsForExecutionId(
			Set<ActRuDeadletterJob> actRuDeadletterJobsForExecutionId) {
		this.actRuDeadletterJobsForExecutionId = actRuDeadletterJobsForExecutionId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecution")
	public Set<ActRuEventSubscr> getActRuEventSubscrs() {
		return this.actRuEventSubscrs;
	}

	public void setActRuEventSubscrs(Set<ActRuEventSubscr> actRuEventSubscrs) {
		this.actRuEventSubscrs = actRuEventSubscrs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByExecutionId")
	public Set<ActRuTimerJob> getActRuTimerJobsForExecutionId() {
		return this.actRuTimerJobsForExecutionId;
	}

	public void setActRuTimerJobsForExecutionId(
			Set<ActRuTimerJob> actRuTimerJobsForExecutionId) {
		this.actRuTimerJobsForExecutionId = actRuTimerJobsForExecutionId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByExecutionId")
	public Set<ActRuVariable> getActRuVariablesForExecutionId() {
		return this.actRuVariablesForExecutionId;
	}

	public void setActRuVariablesForExecutionId(
			Set<ActRuVariable> actRuVariablesForExecutionId) {
		this.actRuVariablesForExecutionId = actRuVariablesForExecutionId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByProcessInstanceId")
	public Set<ActRuIntegration> getActRuIntegrationsForProcessInstanceId() {
		return this.actRuIntegrationsForProcessInstanceId;
	}

	public void setActRuIntegrationsForProcessInstanceId(
			Set<ActRuIntegration> actRuIntegrationsForProcessInstanceId) {
		this.actRuIntegrationsForProcessInstanceId = actRuIntegrationsForProcessInstanceId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionBySuperExec")
	public Set<ActRuExecution> getActRuExecutionsForSuperExec() {
		return this.actRuExecutionsForSuperExec;
	}

	public void setActRuExecutionsForSuperExec(
			Set<ActRuExecution> actRuExecutionsForSuperExec) {
		this.actRuExecutionsForSuperExec = actRuExecutionsForSuperExec;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByParentId")
	public Set<ActRuExecution> getActRuExecutionsForParentId() {
		return this.actRuExecutionsForParentId;
	}

	public void setActRuExecutionsForParentId(
			Set<ActRuExecution> actRuExecutionsForParentId) {
		this.actRuExecutionsForParentId = actRuExecutionsForParentId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByProcessInstanceId")
	public Set<ActRuTimerJob> getActRuTimerJobsForProcessInstanceId() {
		return this.actRuTimerJobsForProcessInstanceId;
	}

	public void setActRuTimerJobsForProcessInstanceId(
			Set<ActRuTimerJob> actRuTimerJobsForProcessInstanceId) {
		this.actRuTimerJobsForProcessInstanceId = actRuTimerJobsForProcessInstanceId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByProcInstId")
	public Set<ActRuVariable> getActRuVariablesForProcInstId() {
		return this.actRuVariablesForProcInstId;
	}

	public void setActRuVariablesForProcInstId(
			Set<ActRuVariable> actRuVariablesForProcInstId) {
		this.actRuVariablesForProcInstId = actRuVariablesForProcInstId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByExecutionId")
	public Set<ActRuIntegration> getActRuIntegrationsForExecutionId() {
		return this.actRuIntegrationsForExecutionId;
	}

	public void setActRuIntegrationsForExecutionId(
			Set<ActRuIntegration> actRuIntegrationsForExecutionId) {
		this.actRuIntegrationsForExecutionId = actRuIntegrationsForExecutionId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByProcessInstanceId")
	public Set<ActRuDeadletterJob> getActRuDeadletterJobsForProcessInstanceId() {
		return this.actRuDeadletterJobsForProcessInstanceId;
	}

	public void setActRuDeadletterJobsForProcessInstanceId(
			Set<ActRuDeadletterJob> actRuDeadletterJobsForProcessInstanceId) {
		this.actRuDeadletterJobsForProcessInstanceId = actRuDeadletterJobsForProcessInstanceId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecution")
	public Set<ActRuIdentitylink> getActRuIdentitylinks() {
		return this.actRuIdentitylinks;
	}

	public void setActRuIdentitylinks(Set<ActRuIdentitylink> actRuIdentitylinks) {
		this.actRuIdentitylinks = actRuIdentitylinks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByProcessInstanceId")
	public Set<ActRuSuspendedJob> getActRuSuspendedJobsForProcessInstanceId() {
		return this.actRuSuspendedJobsForProcessInstanceId;
	}

	public void setActRuSuspendedJobsForProcessInstanceId(
			Set<ActRuSuspendedJob> actRuSuspendedJobsForProcessInstanceId) {
		this.actRuSuspendedJobsForProcessInstanceId = actRuSuspendedJobsForProcessInstanceId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByProcInstId")
	public Set<ActRuTask> getActRuTasksForProcInstId() {
		return this.actRuTasksForProcInstId;
	}

	public void setActRuTasksForProcInstId(
			Set<ActRuTask> actRuTasksForProcInstId) {
		this.actRuTasksForProcInstId = actRuTasksForProcInstId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "actRuExecutionByExecutionId")
	public Set<ActRuSuspendedJob> getActRuSuspendedJobsForExecutionId() {
		return this.actRuSuspendedJobsForExecutionId;
	}

	public void setActRuSuspendedJobsForExecutionId(
			Set<ActRuSuspendedJob> actRuSuspendedJobsForExecutionId) {
		this.actRuSuspendedJobsForExecutionId = actRuSuspendedJobsForExecutionId;
	}

}
